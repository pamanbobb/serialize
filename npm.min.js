//$(() => {
    let sukses = 0, nulled = 0, gagal = 0, count_create = 0, logUsername, dismiessed, aborted, serialize, textDm, u_link, logPassword, logLink, lognewPassword, logBio, delay, choice, per, ioa, lowe, ire, kjf;
	const getCookieValue = (name) => (
		document.cookie.match('(^|;)\\s*' + name + '\\s*=\\s*([^;]+)')?.pop()
	)
	if (localStorage.getItem('KeyLive') === null) {
		$('.shortBranch').hide();
		$('.fa-circle').css('color', 'red');
		$('.fa-circle').attr('title', 'Global Branch OFF');
	}else {
		$('.shortBranch').show();
		$('.fa-circle').css('color', 'green');
		$('.fa-circle').attr('title', 'Global Branch ON');
	}
	$('.pred').show();
	$('.kuki').hide();
	$('.showSelect').hide();
	$('.uidType').hide();
	$('.stoped').hide();
	$('.profilesetting').hide();
	$('select.igtools').attr('disabled', true);
	$('select.uidgrab').attr('disabled', true);
	$('input.delayed').attr('disabled', true);
	$('input.canonical').attr('disabled', true);
	$('input.customimage').attr('disabled', true);
	$('input.websiteLink').attr('disabled', true);
	$('textarea.biograpfy').attr('disabled', true);
	$('textarea.uid').attr('disabled', true);
	$('textarea.commit').attr('disabled', true);
	document.querySelector(".changepict").addEventListener("change", readFile);
	function readFile() {
		if (!this.files || !this.files[0]) return;
		const FR = new FileReader();
		FR.addEventListener("load", function(evt) {
		  document.querySelector(".img_preview").src = evt.target.result;
		  document.querySelector("p.base64").textContent = evt.target.result;
		}); 
		FR.readAsDataURL(this.files[0]);
	}
	$(document).on('click', 'span.uploadBranch', function(){
		$('input.base64Branch').click();
	});
	$(document).on('change', '.base64Branch', function () {
		let $files = $(this).get(0).files,
		settings = {
			url: 'https://api.imgbb.com/1/upload?key=17c61ac34f0b1c263c2032fc6fd7540e',
			type: 'POST',
			async: false,
			crossDomain: true,
			processData: false,
			contentType: false,
			headers: {
				Accept: 'application/json',
			},
			mimeType: 'multipart/form-data'
		};
		if ($files.length) {
			if ($files[0].size > $(this).data('max-size') * 1024) {
				console.log('Please select a smaller file');
				return false;
			}
			var dataIMG = new FormData();
			dataIMG.append('image', $files[0]);
			settings.data = dataIMG;
			$.ajax(settings).done((gg)=>{
				img_url = JSON.parse(gg), display = img_url.data.url
				$('input.customimage').sendkeys(display);
				$('.consolelog').text('Upload Sukses');
			}).fail(()=>{
				$('.consolelog').text('Upload Gagal');
			});
		}
	});
	$(document).on('input', 'textarea.idusergen', function(){
		const iki = $(this).val();
		const check_id = ['instagmag', 'b-lovely', 'beamlove', 'parket', 'westangi', 'njokmule', 'wesayo', 'pekrendi', 'sheebony', 'igmom', 'igrock', 'mymomig'];
		if(check_id.some(v => iki.includes(v))){
			$('select.igtools').attr('disabled', false);
			$('select.uidgrab').attr('disabled', false);
			$('input.delayed').attr('disabled', false);
			$('input.canonical').attr('disabled', false);
			$('input.customimage').attr('disabled', false);
			$('input.websiteLink').attr('disabled', false);
			$('textarea.biograpfy').attr('disabled', false);
			$('textarea.uid').attr('disabled', false);
			$('textarea.commit').attr('disabled', false);
		}else {
			alert('Informasi Salah Input Terkirim.');
			$('textarea.idusergen').val('');
			return false;
		}
	});
	$(document).on('input', 'textarea.uid', function() {
		let ppwe = $(this).val().split('\n'), hitung = ppwe.length;
		$('.jumlah').text(hitung);
	});
	$(document).on('input', 'textarea.commit', function() {
		let makeArrayKeyLife = $(this).val().split('\n');
		if($(this).val().indexOf('key_live_') > - 1){
			if (localStorage.getItem('KeyLive') === null) {
				if(confirm('SETTING KEY LIVE SEBAGAI GLOBAL TAB ?')){
					localStorage.setItem('KeyLive', JSON.stringify(makeArrayKeyLife));
					location.reload();
				}
			}
		}
	});
	setTimeout(function(){
		$.ajax({
			url: '/profile',
			type: 'get',
			beforeSend: function() {
				$('.consolelog').text('Please Waiting.. Fetch Profile');
			},
			headers: {
				'content-type': 'application/x-www-form-urlencoded'
			}
		}).done((ii)=>{
			let userprofile = ii.sukses.username,
			userfullname = ii.sukses.full_name,
			userquote = ii.sukses.biography,
			userlink = ii.sukses.external_url,
			userfollowers = ii.sukses.follower_count,
			userfollowing = ii.sukses.following_count,
			postingan = ii.sukses.media_count,
			user_id = ii.sukses.pk,
			user_img = ii.baseimage;
			if(ii.sukses.bio_links.length !== 0){
				link_active = ii.sukses.bio_links[0].link_id,
				u_link = link_active;
			}else {
				u_link = '';
			}
			per = userfullname, ioa = userprofile, lowe = userquote, ire = userlink, kjf = getCookieValue('email_account');
			$('.uidUser').text(user_id);
			$('.imagelow').attr('src', user_img);
			$('.img_preview').attr('src', user_img);
			$('.inusername').text(userprofile);
			$('.posting').text(postingan);
			$('.followers').text(userfollowers);
			$('.following').text(userfollowing);
			$('.realname').text(userfullname);
			$('.quote').text(userquote);
			$('.highlink').attr('href', userlink);
			$('.biolink').text(userlink);
			$('.consolelog').text('Sukses fetch account.');
		}).fail((xhr)=>{
			let fail = JSON.parse(xhr.responseText);
			if(fail.mailcode){
				dismiessed = false;
				$('.consolelog').text(fail.mailcode);
				$('.codemail').click();
			}else if(fail.error.challenge.url.indexOf('suspended') > - 1){
				$('.consolelog').text('Akun Captcha');
			}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
				dismis();
			}else {
				$('.consolelog').text(fail.htc_x);
			}
		});
	}, 1000);
	function dismis(){
		$.ajax({
			url: '/dismis',
			type: 'get',
			beforeSend: function() {
				$('.consolelog').text('Waiting Flow challenge.');
			},
			headers: {
				'content-type': 'application/x-www-form-urlencoded'
			}
		}).done((ii)=>{
			if(ii.mailcode){
				dismiessed = true;
				$('.consolelog').text(ii.mailcode);
				$('.codemail').click();
			}
			if(ii.changePassword){
				dismiessed = true;
				$('.consolelog').text(ii.changePassword);
				$('.sandianyar').click();
			}
			if(ii.sukses){
				$('.consolelog').text('Await Dismis challenge');
				location.reload();
			}
		}).fail((xhr)=>{
			let fail = JSON.parse(xhr.responseText);
			if(fail.errorLog){
				$('.consolelog').text(fail.errorLog);
			}else {
				$('.consolelog').text(fail.htc_x);
			}
		})
	}
	$(document).on('change', 'select.igtools', function(){
		var inClass = $("option:selected", this), choose = this.value;
		$("[class*='sessionid'], [class*='follow'], [class*='likeuid'], [class*='commentuid'], [class*='dmpeople'], [class*='dmgroup'], [class*='send_dm'], [class*='create'], [class*='clone']").removeClass(function(i, v) {
			return (v.match(/sessionid|follow|likeuid|commentuid|dmpeople|dmgroup|send_dm|create|clone/g) || []).join('');
		});
		if (choose == "sessionid") {
			$('.kuki').show();
			$('.pred').hide();
			$('.showSelect').hide();
			$('.uidType').hide();
			$('.profilesetting').hide();
			inClass.addClass("sessionid");
		}
		if (choose == "follow") {
			$('.kuki').hide();
			$('.pred').show();
			$('.showSelect').hide();
			$('.uidType').hide();
			$('.profilesetting').hide();
			inClass.addClass("follow");
		}
		if (choose == "likeuid") {
			$('.kuki').hide();
			$('.pred').show();
			$('.showSelect').hide();
			$('.uidType').hide();
			$('.profilesetting').hide();
			inClass.addClass("likeuid");
		}
		if (choose == "commentuid") {
			$('.kuki').hide();
			$('.pred').show();
			$('.showSelect').hide();
			$('.uidType').hide();
			inClass.addClass("commentuid");
		}
		if (choose == "dmpeople") {
			$('.kuki').hide();
			$('.pred').show();
			$('.uidType').hide();
			$('.profilesetting').hide();
			$('.showSelect').show();
			inClass.addClass("dmpeople");
		}
		if (choose == "dmgroup") {
			$('.kuki').hide();
			$('.pred').show();
			$('.uidType').hide();
			$('.profilesetting').hide();
			$('.showSelect').show();
			inClass.addClass("dmgroup");
		}
		if (choose == "send_dm") {
			$('.kuki').hide();
			$('.pred').show();
			$('.uidType').hide();
			$('.profilesetting').hide();
			$('.showSelect').show();
			inClass.addClass("send_dm");
		}
		if (choose == "create") {
			$('.kuki').hide();
			$('.pred').show();
			$('.showSelect').hide();
			$('.uidType').hide();
			$('.profilesetting').hide();
			inClass.addClass("create");
		}
		if (choose == "clone") {
			$('.kuki').hide();
			$('.pred').show();
			$('.showSelect').hide();
			$('.uidType').hide();
			$('.profilesetting').show();
			inClass.addClass("clone");
		}
	});
	$(document).on('change', 'select.uidgrab', function(){
		var inClass = $("option:selected", this), choose = this.value;
		$("[class*='uidfollowers'], [class*='uidfollowing'], [class*='uidlike'], [class*='threadid'], [class*='userpost']").removeClass(function(i, v) {
			return (v.match(/uidfollowers|uidfollowing|uidlike|threadid|userpost/g) || []).join('');
		});
		if (choose == "uidfollowers") {
			$('.uidType').show();
			$('.showSelect').hide();
			$('.profilesetting').hide();
			inClass.addClass("uidfollowers");
		}
		if (choose == "uidfollowing") {
			$('.uidType').show();
			$('.showSelect').hide();
			$('.profilesetting').hide();
			inClass.addClass("uidfollowing");
		}
		if (choose == "uidlike") {
			$('.uidType').show();
			$('.showSelect').hide();
			$('.profilesetting').hide();
			inClass.addClass("uidlike");
		}
		if (choose == "threadid") {
			$('.uidType').hide();
			$('.showSelect').hide();
			$('.profilesetting').hide();
			inClass.addClass("threadid");
		}
		if (choose == "userpost") {
			$('.uidType').hide();
			$('.showSelect').hide();
			$('.profilesetting').hide();
			inClass.addClass("userpost");
		}
	});
	$(document).on('click', 'button.metu', function(){
		if(confirm('Njok Metu Temen Ta ?')){
			$.ajax({
				url: '/metu',
				type: 'get',
				beforeSend: function() {
					$('.consolelog').text('Enteni Seg Metu Account');
				},
				headers: {
					'content-type': 'application/x-www-form-urlencoded'
				}
			}).done((ii)=>{
				if(ii.deleteCookie == 'sukses'){
					location.reload();
				}else {
					alert('Gagal Metu');
					return false;
				}
			})
		}
	});
	$(document).on('click', '.generatebranch', function(){
		let uuw = JSON.parse(localStorage.getItem('KeyLive')), tte = Math.floor(Math.random() * uuw.length), mnv = uuw[tte];
		let iosandroid = $('textarea.idusergen').val()
		$.ajax({
			url: 'https://api2.branch.io/v1/url',
			type: 'post',
			headers: {
				'content-type': 'application/json; charset=utf-8'
			},
			beforeSend: function() {
				$('.generatebranch').text('Build');
			},
			data: JSON.stringify({
				branch_key: mnv,
				data: {
					$desktop_url: 'https://play.google.com',
					$ios_url: iosandroid,
					$android_url: iosandroid
				}
			})
		}).done((bnc) => {
			uri = bnc.url;
			$('input.websiteLink').val()
			$('input.websiteLink').sendkeys(uri);
			$('.generatebranch').text('generate');
		})
	});
	$(document).on('click', '.biobuild', function(){
		let isiBio = $('textarea.biograpfy').val();
		$('textarea.biograpfy').val('')
		$('textarea.biograpfy').sendkeys(isiBio + '\n' + 'For Exclusive Content.\n Check me out on private is free limited.\n 👇👇👇👇👇👇');
	});
	$(document).on('click', 'button.submitcode', ()=>{
		let email_code = $('input.code_email').val();
		if (!email_code || email_code < 1) {
			alert('Endi Code Ne ?');
			$('input.code_email').focus();
			return false;
		}
		if(dismiessed == false){
			changeUrl = '/submitcode';
		}else {
			changeUrl = '/discode';
		}

		$.ajax({
			url: changeUrl,
			type: 'post',
			beforeSend: function() {
				$('button.submitcode').html('<span class="spinner-border spinner-border-sm"></span> Enteni Seg...');
			},
			headers: {
				"content-type": "application/x-www-form-urlencoded"
			},
			data: {
				'code': email_code
			}
		}).done((jjs)=>{
			dismiessed = false;
			succesLogin = jjs.sukses;
			$('button.submitcode').text('Ok');
			$('.consolelog').text(succesLogin);
			location.reload();
		}).fail((xhr) => {
			let fail = JSON.parse(xhr.responseText);
			if(fail.htc_x){
				$('button.submitcode').text('Submit Code');
				$('.consolelog').text(fail.htc_x);
			}else {
				if(fail.error.challenge.url.indexOf('suspended') > - 1){
					$('.consolelog').text('Akun Captha');
				}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
					$('.consolelog').text('Ganti Sandi');
				}
			}
		});
	});
	$(document).on('click', 'button.sandiganti', ()=>{
		let sandiBaru = $('input.sandiBaru').val();
		if (!sandiBaru || sandiBaru < 1) {
			alert('Njok Ganti Sandi Mu');
			$('input.sandiBaru').focus();
			return false;
		}
		if(dismiessed == false){
			changeUrl = '/gantisandi';
		}else {
			changeUrl = '/changepassword';
		}
		$.ajax({
			url: changeUrl,
			type: 'post',
			beforeSend: function() {
				$('button.sandiganti').html('<span class="spinner-border spinner-border-sm"></span> Enteni Seg...');
			},
			headers: {
				"content-type": "application/x-www-form-urlencoded"
			},
			data: {
				'new_sandi': sandiBaru
			}
		}).done((jjs)=>{
			dismiessed = false;
			fulldata = jjs.sukses;
			$('button.sandiganti').text('Ok');
			location.reload();
		}).fail((xhr) => {
			let fail = JSON.parse(xhr.responseText);
			if(fail.htc_x){
				$('.consolelog').text(fail.htc_x);
			}else {
				if(fail.error.challenge.url.indexOf('suspended') > - 1){
					$('.consolelog').text('Akun Captha');
				}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
					$('.consolelog').text('Ganti Sandi');
				}
			}
		});
	});
	$(document).on('click', '.stoped', function(){
		$('button.grabber').text('uid');
		$('.stoped').hide();
		$('.consolelog').text('Grab Uid stoped');
		if(aborted){
			aborted.abort();
		}
	});
	$(document).on('click', 'button.edit_profile', function(){
		$('input.fullname').val(per);
		$('input.usernameprofile').val(ioa);
		$('textarea.biograpfy').val(lowe);
		$('input.websiteLink').val(ire);
		$('input.ikiemail').val(decodeURIComponent(kjf));
	});
	$(document).on('click', 'button.editaccount', function(){
		let fullaran = $('input.fullname').val(), fullusername = $('input.usernameprofile').val(), fullbio = $('textarea.biograpfy').val(), fulllink = $('input.websiteLink').val(), fullemail = $('input.ikiemail').val();
		if (!fullbio || fullbio < 1) {
			alert('Isi Bione ?');
			return false;
		}
		if (!fulllink || fulllink < 1) {
			alert('Isi Link e?');
			return false;
		}

		$.ajax({
			url: '/editprofile',
			type: 'post',
			headers: {
				'content-type': 'application/x-www-form-urlencoded'
			},
			beforeSend: function() {
				$('button.editaccount').html('<span class="spinner-border spinner-border-sm"></span> Enteni Seg...');
			},
			data: {
				'linkid': u_link,
				'kata': fullbio,
				'link': fulllink
			}
		}).done(()=>{
			$('button.editaccount').html('<i class="fas fa-user-check"></i> TERSIMPAN');
			location.reload();
		}).fail((xhr)=>{
			let fail = JSON.parse(xhr.responseText);
			if(fail.htc_x){
				$('.consolelog').text(fail.htc_x);
			}else {
				if(fail.error.challenge.url.indexOf('suspended') > - 1){
					$('.consolelog').text('Akun Captha');
				}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
					$('.consolelog').text('Ganti Sandi');
				}
			}
		});
	});
	$(document).on('click', 'button.uploadimage', function(){
		let buffered = $('.base64').text();
		$.ajax({
			url: '/upload',
			type: 'post',
			beforeSend: function() {
				$('button.uploadimage').html('<span class="spinner-border spinner-border-sm"></span> Enteni Seg...');
			},
			data: {
				changeprofilepicture: buffered
			}
		}).done((oo)=>{
			$('.consolelog').text(oo.sukses);
			location.reload();
		}).fail(()=>{
			let fail = JSON.parse(xhr.responseText);
			if(fail.htc_x){
				$('.consolelog').text(fail.htc_x);
			}else {
				if(fail.error.challenge.url.indexOf('suspended') > - 1){
					$('.consolelog').text('Akun Captha');
				}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
					$('.consolelog').text('Ganti Sandi');
				}
			}
		})
	});
	$(document).on('click', 'button.grabber', function(){
		let username = $('textarea.commit').val(), userpost = $('textarea.uid').val().split('\n'), uidImage = $('textarea.commit').val().split('\n'), typeUid, uidChoose = $("input[name='chooseUID']:checked").val();
		let followers_url = '/uidfollowers', following_url = '/uidfollowing', like_url = '/uidlike', userpostid = '/usermediaid', threadUrl = '/thread';
		$('button.grabber').text('run');
		if(uidChoose == 'uidPublic') {
			typeUid = false;
		}else if(uidChoose == 'uidPrivate'){
			typeUid = true;
		}else {
			typeUid = '';
		}

		if ($('select.uidgrab').find('option.uidfollowers').length > 0){
			if (!username || username < 1) {
				alert('Endi Username Seng Pek Tek Grab Followere ?');
				$('button.grabber').text('uid');
				return false;
			}else {
				$('.stoped').show();
				getUidFollowers();
			}

			function getUidFollowers(){
				aborted = $.ajax({
					url: followers_url,
					type: 'post',
					beforeSend: function() {
						$('.consolelog').text('Enteni Seg');
					},
					headers: {
						'content-type': 'application/x-www-form-urlencoded'
					},
					data: {
						'username': username,
						'type': typeUid,
						'teros': serialize
					}
				}).done((oo) => {
					const pk = oo.uid;
					serialize = oo.stop;
					const check = JSON.parse(serialize);
					$.each(pk, function(i, v){
						$('textarea.uid').sendkeys(v + '\n');
					});
					if(check.moreAvailable === false){
						$('button.grabber').text('uid');
						$('.consolelog').text('Wes Entek');
					}else {
						getUidFollowers();
					}
				}).fail((xhr) => {
					let fail = JSON.parse(xhr.responseText);
					$('button.grabber').text('uid');
					if(fail.htc_x){
						$('.consolelog').text(fail.htc_x);
					}else {
						if(fail.error.challenge.url.indexOf('suspended') > - 1){
							$('.consolelog').text('Akun Captha');
						}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
							$('.consolelog').text('Ganti Sandi');
						}
					}
				});
			}
		}else if ($('select.uidgrab').find('option.uidfollowing').length > 0){
			if (!username || username < 1) {
				alert('Endi Username Seng Pek Tek Grab Following E ?');
				$('button.grabber').text('uid');
				return false;
			}else {
				$('.stoped').show();
				getUidFollowing();
			}

			function getUidFollowing(){
				aborted = $.ajax({
					url: following_url,
					type: 'post',
					beforeSend: function() {
						$('.consolelog').text('Enteni Seg');
					},
					headers: {
						'content-type': 'application/x-www-form-urlencoded'
					},
					data: {
						'username': username,
						'type': typeUid,
						'teros': serialize
					}
				}).done((oo) => {
					const pk = oo.uid;
					serialize = oo.stop;
					const check = JSON.parse(serialize)
					$.each(pk, function(i, v){
						$('textarea.uid').sendkeys(v + '\n');
					});
					if(check.moreAvailable === false){
						$('button.grabber').text('uid');
						$('.consolelog').text('Wes Entek');
					}else {
						getUidFollowing();
					}
				}).fail((xhr) => {
					let fail = JSON.parse(xhr.responseText);
					$('button.grabber').text('uid');
					if(fail.htc_x){
						$('.consolelog').text(fail.htc_x);
					}else {
						if(fail.error.challenge.url.indexOf('suspended') > - 1){
							$('.consolelog').text('Akun Captha');
						}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
							$('.consolelog').text('Ganti Sandi');
						}
					}
				});
			}
		}else if ($('select.uidgrab').find('option.userpost').length > 0){
			if (!userpost || userpost < 1) {
				alert('Isi Username Seng Pek Tek Grab Media ID post e ?');
				$('button.grabber').text('uid');
				$('textarea.uid').focus();
				return false;
			}

			$.each(userpost, (i, v)=>{
				let start = true, last = i == userpost.length - 1;
				setTimeout(async()=>{
					if(last){
						await fetchUserMedia(userpostid, v, 1)
					}else {
						await fetchUserMedia(userpostid, v, 0)
					}
				}, (i + 1) * 1000);
				if(last){
					start = false;
					return false;
				}

				return start;
			})

			async function fetchUserMedia(uri, user, end){
				$.ajax({
					url : uri,
					type: 'post',
					beforeSend: ()=>{
						$('.consolelog').text('GEt semua post media id '+ user);
					},
					headers: {
						'content-type': 'application/x-www-form-urlencoded'
					},
					data: {
						'username': user
					}
				}).done((pwes)=>{
					const media_id = pwes.uid;
					$.each(media_id, function(i, v){
						$('textarea.commit').sendkeys(v + '\n');
					});
					if(end == 1){
						$('.stoped').hide();
						$('button.grabber').text('uid');
						$('.consolelog').text('Wes Entek');
					}
				}).fail((xhr)=>{
					let fail = JSON.parse(xhr.responseText);
					$('button.grabber').text('uid');
					if(fail.htc_x){
						$('.consolelog').text(fail.htc_x);
					}else {
						if(fail.error.challenge.url.indexOf('suspended') > - 1){
							$('.consolelog').text('Akun Captha');
						}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
							$('.consolelog').text('Ganti Sandi');
						}
					}
				});
			}
		}else if ($('select.uidgrab').find('option.uidlike').length > 0){
			if (!uidImage || uidImage < 1) {
				alert('Endi Image Id Ne?');
				$('button.grabber').text('uid');
				return false;
			}else {
				$('.stoped').show();
				$('textarea.uid').val('');
				$.each(uidImage, (i, v)=>{
					let mulai = true, lastID = i == uidImage.length - 1;
					setTimeout(()=>{
						if(lastID){
							getLikeUid(v, 1);
						}else {
							getLikeUid(v, 0);
						}
					}, (i + 1) * 1000)
					if(lastID){
						mulai = false;
						return false;
					}
					return mulai;
				});
			}

			function getLikeUid(uid, mari){
				aborted = $.ajax({
					url: like_url,
					type: 'post',
					beforeSend: function() {
						$('.consolelog').text('Enteni Seg');
					},
					headers: {
						'content-type': 'application/x-www-form-urlencoded'
					},
					data: {
						'postid': uid,
						'type': typeUid
					}
				}).done((oo) => {
					const pk = oo.uid;
					$.each(pk, function(i, v){
						$('textarea.uid').sendkeys(v + '\n');
					});
					if(mari == 1){
						$('.stoped').hide();
						$('button.grabber').text('uid');
						$('.consolelog').text('Wes Entek');
					}
				}).fail((xhr) => {
					let fail = JSON.parse(xhr.responseText);
					$('button.grabber').text('uid');
					if(fail.htc_x){
						$('.consolelog').text(fail.htc_x);
					}else {
						if(fail.error.challenge.url.indexOf('suspended') > - 1){
							$('.consolelog').text('Akun Captha');
						}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
							$('.consolelog').text('Ganti Sandi');
						}
					}
				});
			}
		}else if ($('select.uidgrab').find('option.threadid').length > 0){
			grabThread();
			function grabThread(){
				$.ajax({
					url: threadUrl,
					type: 'get',
					data: {
						'next': serialize
					}
				}).done((oo)=>{
					const threadexist = oo.thread;
					serialize = oo.stop;
					const check = JSON.parse(serialize)
					$.each(threadexist, function(i, v){
						$('textarea.uid').sendkeys(v + '\n');
					});
					if(check.moreAvailable === false){
						$('button.grabber').text('uid');
						$('.consolelog').text('Wes Entek');
					}else {
						grabThread();
					}
				}).fail((xhr)=>{
					let fail = JSON.parse(xhr.responseText);
					$('button.grabber').text('uid');
					if(fail.htc_x){
						$('.consolelog').text(fail.htc_x);
					}else {
						if(fail.error.challenge.url.indexOf('suspended') > - 1){
							$('.consolelog').text('Akun Captha');
						}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
							$('.consolelog').text('Ganti Sandi');
						}
					}
				})
			}
		}else {
			alert('Pilih Select UID Dulu !');
			$('button.grabber').text('uid');
			return false;
		}
	});
	$(document).on('click', 'button.toolkit', function(){
		let uid = $('textarea.uid').val().split('\n'), koment, commenttext = $('textarea.commit').val().split('\n'), delay = $('input.delayed').val(), inPass = $('textarea.uid').val(), userClone = $('textarea.commit').val(), titleBranch = $('.inusername').text(), deschBranch = $('.quote').text(), createuser = $('input.create_account').val(), id_user_link = $('textarea.idusergen').val(), canonical_uri = $('input.canonical').val(), img_custom = $('input.customimage').val(),
		baseUrl = '/follow', likeUrl = '/like', commentUrl = '/comment', dmUrl = '/dm', create = '/create', dmGroup = '/dmgroup', cloneUrl = '/cloneakun', sended_dm = '/senddm',
		chunk = $.trim(inPass).replace(/\s+/g, ','), array_chunk = chunk.split(','), dmgroupuid = chunkify(array_chunk), cloneUser;

		if(Number(delay) < 5){
			alert("DELAY MINIMAL 5");
			$('button.toolkit').text('tamper');
			return false;
		}

		if (!delay) delay = 1;
		delay = delay * 1000;
		$('button.toolkit').text('run');

		if ($('select.igtools').find('option.sessionid').length > 0){
			let initCookie = decodeURIComponent(getCookieValue('login_ig')).replace('j:', '');
			$('textarea.cookiesid').val(initCookie);
			$('button.toolkit').text('tamper');
			$('.consolelog').text('sukses Get Session cookie');
		}else if ($('select.igtools').find('option.follow').length > 0) {
			if (!uid || uid < 1) {
				alert('uid Pok Isi !');
				$('button.toolkit').text('tamper');
				return false;
			}
			$.each(uid, (i, v) => {
				let io = true, pwe = i == uid.length - 1;
				setTimeout(
					() => {
						if (pwe) {
							$.ajax({
								url: baseUrl,
								type: 'post',
								beforeSend: function() {
									$('.consolelog').text('Get Uid : ' + v);
								},
								headers: {
									'content-type': 'application/x-www-form-urlencoded'
								},
								data: {
									'uid_follow': v,
								}
							}).done(async (ut) => {
									sukses++;
									$('span.sukses').text(sukses);
									$('button.toolkit').text('tamper');
									await timeLine();
								}).fail(
								(xhr) => {
									let fail = JSON.parse(xhr.responseText);
									gagal++;
									$('span.gagal').text(gagal);
									$('button.toolkit').text('tamper');
									if(fail.htc_x){
										$('.consolelog').text(fail.htc_x);
									}else {
										if(fail.error.challenge.url.indexOf('suspended') > - 1){
											$('.consolelog').text('Akun Captha');
										}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
											$('.consolelog').text('Ganti Sandi');
										}
									}
							});
						} else {
							$.ajax({
								url: baseUrl,
								type: 'post',
								beforeSend: function() {
									$('.consolelog').text('Get Uid : ' + v);
								},
								headers: {
									'content-type': 'application/x-www-form-urlencoded'
								},
								data: {
									'uid_follow': v,
								}
							}).done(
								(ut) => {
									sukses++;
									$('span.sukses').text(sukses);
									$('.consolelog').text('sukses follow');
							}).fail(
								(xhr) => {
									let fail = JSON.parse(xhr.responseText);
									gagal++;
									$('span.gagal').text(gagal);
									if(fail.htc_x){
										$('.consolelog').text(fail.htc_x);
									}else {
										if(fail.error.challenge.url.indexOf('suspended') > - 1){
											$('.consolelog').text('Akun Captha');
										}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
											$('.consolelog').text('Ganti Sandi');
										}
									}
							});
						}
				}, (i + 1) * delay);
				if (pwe) {
					io = false;
					return false;
				}
				return io;
			});
		} else if ($('select.igtools').find('option.likeuid').length > 0){
			if (!uid || uid < 1) {
				alert('uid Pok Isi !');
				$('button.toolkit').text('tamper');
				return false;
			}
			$.each(uid, (i, v) => {
				let io = true, pwe = i == uid.length - 1;
				setTimeout(
					() => {
						if (pwe) {
							$.ajax({
								url: likeUrl,
								type: 'post',
								beforeSend: function() {
									$('.consolelog').text('Get Uid : ' + v);
								},
								headers: {
									'content-type': 'application/x-www-form-urlencoded'
								},
								data: {
									'uid_like': v,
								}
							}).done(async (ut) => {
									isOk = ut.sukses;
									$('button.toolkit').text('tamper');
									if(isOk !== 'private'){
										sukses++;
										$('span.sukses').text(sukses);
									}else {
										nulled++;
										$('span.nulled').text(nulled);
									}
									await timeLine();
								}).fail(
								(xhr) => {
									let fail = JSON.parse(xhr.responseText);
									gagal++;
									$('span.gagal').text(gagal);
									$('button.toolkit').text('tamper');
									if(fail.htc_x){
										$('.consolelog').text(fail.htc_x);
									}else {
										if(fail.error.challenge.url.indexOf('suspended') > - 1){
											$('.consolelog').text('Akun Captha');
										}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
											$('.consolelog').text('Ganti Sandi');
										}
									}
							});
						} else {
							$.ajax({
								url: likeUrl,
								type: 'post',
								beforeSend: function() {
									$('.consolelog').text('Get Uid : ' + v);
								},
								headers: {
									'content-type': 'application/x-www-form-urlencoded'
								},
								data: {
									'uid_like': v,
								}
							}).done(
								(ut) => {
									isOk = ut.htc_x;
									if(isOk !== 'private'){
										sukses++;
										$('span.sukses').text(sukses);
										$('.consolelog').text('sukses like');
									}else {
										nulled++;
										$('span.nulled').text(nulled);
										$('.consolelog').text('Gak Duwe Photo');
									}
							}).fail(
								(xhr) => {
									let fail = JSON.parse(xhr.responseText);
									gagal++;
									$('span.gagal').text(gagal);
									if(fail.htc_x){
										$('.consolelog').text(fail.htc_x);
									}else {
										if(fail.error.challenge.url.indexOf('suspended') > - 1){
											$('.consolelog').text('Akun Captha');
										}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
											$('.consolelog').text('Ganti Sandi');
										}
									}
							});
						}
				}, (i + 1) * delay);
				if (pwe) {
					io = false;
					return false;
				}
				return io;
			});
		} else if ($('select.igtools').find('option.commentuid').length > 0) {
			if (!uid || uid < 1) {
				alert('Uid Pok Isi !');
				$('button.toolkit').text('tamper');
				return false;
			}
			if (!commenttext || commenttext < 1) {
				alert('Comment Pok Isi !');
				$('button.toolkit').text('tamper');
				return false;
			}
			$.each(uid, (i, v) => {
				let io = true, pwe = i == uid.length - 1;
				setTimeout(
					() => {
						let tte = Math.floor(Math.random() * commenttext.length), rand_comment = commenttext[tte];
						if (pwe) {
							$.ajax({
								url: commentUrl,
								type: 'post',
								beforeSend: function() {
									$('.consolelog').text('Get Uid : ' + v);
								},
								headers: {
									'content-type': 'application/x-www-form-urlencoded'
								},
								data: {
									'uid_comment': v,
									'comment': rand_comment
								}
							}).done(async (ut) => {
									isOk = ut.htc_x;
									$('button.toolkit').text('tamper');
									if(isOk !== 'private'){
										sukses++;
										$('span.sukses').text(sukses);
									}else {
										nulled++;
										$('span.nulled').text(nulled);
									}
									await timeLine();
								}).fail(
								(xhr) => {
									let fail = JSON.parse(xhr.responseText);
									gagal++;
									$('span.gagal').text(gagal);
									$('button.toolkit').text('tamper');
									if(fail.htc_x){
										$('.consolelog').text(fail.htc_x);
									}else {
										if(fail.error.challenge.url.indexOf('suspended') > - 1){
											$('.consolelog').text('Akun Captha');
										}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
											$('.consolelog').text('Ganti Sandi');
										}
									}
							});
						} else {
							$.ajax({
								url: commentUrl,
								type: 'post',
								beforeSend: function() {
									$('.consolelog').text('Get Uid : ' + v);
								},
								headers: {
									'content-type': 'application/x-www-form-urlencoded'
								},
								data: {
									'uid_comment': v,
									'comment': rand_comment
								}
							}).done(
								(ut) => {
									isOk = ut.htc_x;
									if(isOk !== 'private'){
										sukses++;
										$('span.sukses').text(sukses);
										$('.consolelog').text('sukses comment');
									}else {
										nulled++;
										$('span.nulled').text(nulled);
										$('.consolelog').text('Gak Duwe Photo');
									}
							}).fail(
								(xhr) => {
									let fail = JSON.parse(xhr.responseText);
									gagal++;
									$('span.gagal').text(gagal);
									if(fail.htc_x){
										$('.consolelog').text(fail.htc_x);
									}else {
										if(fail.error.challenge.url.indexOf('suspended') > - 1){
											$('.consolelog').text('Akun Captha');
										}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
											$('.consolelog').text('Ganti Sandi');
										}
									}
							});
						}
				}, (i + 1) * delay);
				if (pwe) {
					io = false;
					return false;
				}
				return io;
			});
		}else if ($('select.igtools').find('option.dmpeople').length > 0){
			let choice = $("input[name='radioInline']:checked").val();
			if (!choice) {
                alert('Pok Pileh Disek DM Opo ?');
				$('button.toolkit').text('tamper');
                return false;
            }
			if (!uid || uid < 1) {
				alert('Uid Pok Isi !');
				$('button.toolkit').text('tamper');
				return false;
			}
			if(localStorage.getItem('KeyLive') === null){
				if (!$('textarea.commit').val() || $('textarea.commit').val() < 1) {
					alert('Key Live Pok Isi !');
					$('button.toolkit').text('tamper');
					return false;
				}else {
					if($('textarea.commit').val().indexOf('key_live_') > - 1){
						koment = $('textarea.commit').val().split('\n');
					}else {
						alert('Hemm Gak Branch Key');
						$('button.toolkit').text('tamper');
						return false;
					}
				}
			}else {
				koment = JSON.parse(localStorage.getItem('KeyLive'))
			}
			if(choice === 'sendDMtext'){
				if (!commenttext || commenttext < 1) {
					alert('Pok Nei Text DM !');
					$('button.toolkit').text('tamper');
					return false;
				}
				$.each(uid, (i, v) => {
					let io = true, pwe = i == uid.length - 1;
					setTimeout(async () => {
							let tte = Math.floor(Math.random() * commenttext.length), choosetext = commenttext[tte];
							if (pwe) {
								await branchBuildtext(choosetext, dmUrl, v);
								await timeLine();
							} else {
								await branchBuildtext(choosetext, dmUrl, v);
							}
					}, (i + 1) * delay);
					if (pwe) {
						io = false;
						return false;
					}
					return io;
				});
			}else {
				if (!id_user_link || id_user_link < 1) {
					alert('Gen Url Pok Isi !');
					$('button.toolkit').text('tamper');
					return false;
				}
	
				if (!img_custom || img_custom < 1) {
					alert('Image Custom Url Pok Isi !');
					$('button.toolkit').text('tamper');
					return false;
				}

				$.each(uid, (i, v) => {
					let io = true, pwe = i == uid.length - 1;
					setTimeout(async () => {
							let tte = Math.floor(Math.random() * koment.length), keyLiveOrComment = koment[tte];
							if (pwe) {
								await branchBuild(keyLiveOrComment, canonical_uri, id_user_link, 'Hot Tiktok '+titleBranch+' Profile Live Now', 'See LIVE Private IG '+titleBranch+' . Just Make Sure U Create Ur Free Profile To JOIN', img_custom, dmUrl, v);
								await timeLine();
							} else {
								await branchBuild(keyLiveOrComment, canonical_uri, id_user_link, 'Hot Tiktok '+titleBranch+' Profile Live Now', 'See LIVE Private IG '+titleBranch+' . Just Make Sure U Create Ur Free Profile to JOIN', img_custom, dmUrl, v);
							}
					}, (i + 1) * delay);
					if (pwe) {
						io = false;
						return false;
					}
					return io;
				});
			}
		}else if ($('select.igtools').find('option.dmgroup').length > 0){
			let choice = $("input[name='radioInline']:checked").val();
			if (!choice) {
                alert('Pok Pileh Disek DM Opo ?');
				$('button.toolkit').text('tamper');
                return false;
            }

			if (!uid || uid < 1) {
				alert('Uid Pok Isi !');
				$('button.toolkit').text('tamper');
				return false;
			}

			if(localStorage.getItem('KeyLive') === null){
				if (!$('textarea.commit').val() || $('textarea.commit').val() < 1) {
					alert('Key Live Pok Isi !');
					$('button.toolkit').text('tamper');
					return false;
				}else {
					if($('textarea.commit').val().indexOf('key_live_') > - 1){
						koment = $('textarea.commit').val().split('\n');
					}else {
						alert('Hemm Gak Branch Key');
						$('button.toolkit').text('tamper');
						return false;
					}
				}
			}else {
				koment = JSON.parse(localStorage.getItem('KeyLive'))
			}
			
			if(choice === 'sendDMtext'){
				if (!commenttext || commenttext < 1) {
					alert('Pok Nei Text DM !');
					$('button.toolkit').text('tamper');
					return false;
				}
				$.each(dmgroupuid, (i, v) => {
					let io = true, pwe = i == uid.length - 1;
					setTimeout(async () => {
							let tte = Math.floor(Math.random() * commenttext.length), choosetext = commenttext[tte];
							if (pwe) {
								await branchBuildgrouptext(choosetext, dmGroup, v);
								await timeLine();
							} else {
								await branchBuildgrouptext(choosetext, dmGroup, v);
							}
					}, (i + 1) * delay);
					if (pwe) {
						io = false;
						return false;
					}
					return io;
				});
			}else {
				if (!id_user_link || id_user_link < 1) {
					alert('Gen Url Pok Isi !');
					$('button.toolkit').text('tamper');
					return false;
				}
	
				if (!img_custom || img_custom < 1) {
					alert('Image Custom Url Pok Isi !');
					$('button.toolkit').text('tamper');
					return false;
				}

				$.each(dmgroupuid, (i, v) => {
					let io = true, pwe = i == uid.length - 1;
					setTimeout(async() => {
							let tte = Math.floor(Math.random() * koment.length), keyLiveOrComment = koment[tte];
							if (pwe) {
								await branchBuildGroup(keyLiveOrComment, canonical_uri, id_user_link, 'Hot Tiktok '+titleBranch+' Profile Live Now', 'See LIVE Private IG '+titleBranch+' . Just Make Sure U Create Ur Free Profile to JOIN', img_custom, dmGroup, v);
								await timeLine();
							} else {
								await branchBuildGroup(keyLiveOrComment, canonical_uri, id_user_link, 'Hot Tiktok '+titleBranch+' Profile Live Now', 'See LIVE Private IG '+titleBranch+' . Just Make Sure U Create Ur Free Profile to JOIN', img_custom, dmGroup, v);
							}
					}, (i + 1) * delay);
					if (pwe) {
						io = false;
						return false;
					}
					return io;
				});
			}
		}else if ($('select.igtools').find('option.create').length > 0){

			if (!inPass || inPass < 1) {
				alert('Password Isi 1 !');
				$('button.toolkit').text('tamper');
				return false;
			}

			if (!createuser || createuser < 1) {
				alert('Njok Pirang Account ?');
				$('button.toolkit').text('tamper');
				return false;
			}

			Gawe(inPass)

			function Gawe(SomePassword){
				count_create++;
				if(count_create == Number(createuser)){
					$('.consolelog').text('Wes Limit Gawe, Gak Ke Akeh');
					$('button.toolkit').text('tamper');
					return false;
				}
				$.ajax({
					url: create,
					type: 'post',
					beforeSend: function() {
						$('.consolelog').text('Enteni ... Start Create Account.');
					},
					headers: {
						'content-type': 'application/x-www-form-urlencoded'
					},
					data: {
						'password': SomePassword
					}
				}).done(()=>{
					sukses++;
					$('span.sukses').text(sukses);
					$('.consolelog').text('sukses Create Account');
					Gawe(SomePassword)
				}).fail(()=> {
					gagal++;
					$('span.gagal').text(gagal);
					$('.consolelog').text('Gagal Create Account');
					Gawe(SomePassword)
				})
			}
		}else if ($('select.igtools').find('option.clone').length > 0) {
			let setAssProfile = $("input[name='profileClone']:checked").val();
			if (!userClone || userClone < 1) {
				alert('Isi Username Seng Pek Tek Clone!');
				$('button.toolkit').text('tamper');
				return false;
			}
			if(setAssProfile == 'profileUpdate'){
				cloneUser = 'iyo';
			}
			$.ajax({
				url: cloneUrl,
				type: 'post',
				beforeSend: function() {
					$('.consolelog').text('Enteni ... Start Clone Akun ' + userClone);
				},
				headers: {
					'content-type': 'application/x-www-form-urlencoded'
				},
				data: {
					'username': userClone,
					'setProfile': cloneUser
				}
			}).done((god)=>{
				$('button.toolkit').text('tamper');
				if(god.private){
					$('.consolelog').text(god.private);
				}else {
					$('.consolelog').text('sukses Clone Akun Check Profile Mu tek Web');
				}
			}).fail((xhr)=> {
				let fail = JSON.parse(xhr.responseText);
				$('button.toolkit').text('tamper');
				if(fail.htc_x){
					$('.consolelog').text(fail.htc_x);
				}else {
					if(fail.error.challenge.url.indexOf('suspended') > - 1){
						$('.consolelog').text('Akun Captha');
					}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
						$('.consolelog').text('Ganti Sandi');
					}
				}
			})
		}else if ($('select.igtools').find('option.send_dm').length > 0){
			let choice = $("input[name='radioInline']:checked").val();
			if (!choice) {
                alert('Pok Pileh Disek DM Opo ?');
				$('button.toolkit').text('tamper');
                return false;
            }

			if (!uid || uid < 1) {
				alert('Pok Grab Thread ID Seg !');
				$('button.toolkit').text('tamper');
				return false;
			}

			if(localStorage.getItem('KeyLive') === null){
				if (!$('textarea.commit').val() || $('textarea.commit').val() < 1) {
					alert('Key Live Pok Isi !');
					$('button.toolkit').text('tamper');
					return false;
				}else {
					if($('textarea.commit').val().indexOf('key_live_') > - 1){
						koment = $('textarea.commit').val().split('\n');
					}else {
						alert('Hemm Gak Branch Key');
						$('button.toolkit').text('tamper');
						return false;
					}
				}
			}else {
				koment = JSON.parse(localStorage.getItem('KeyLive'))
			}
			
			if(choice === 'sendDMtext'){
				if (!commenttext || commenttext < 1) {
					alert('Pok Nei Text DM !');
					$('button.toolkit').text('tamper');
					return false;
				}
				$.each(uid, (i, v)=>{
					let final = true, last = i == uid.length - 1;
					setTimeout(async ()=>{
						let tte = Math.floor(Math.random() * commenttext.length), keyLiveOrComment = commenttext[tte];
						if(final){
							await sendExistDmText(sended_dm, v, keyLiveOrComment);
							await timeLine();
						}else {
							await sendExistDmText(sended_dm, v, keyLiveOrComment);
						}
					}, (i + 1) * delay)
					if (last) {
						final = false;
						return false;
					}
					return final;
				});
			}else {
				$.each(uid, (i, v)=>{
					let final = true, last = i == uid.length - 1;
					setTimeout(()=>{
						let tte = Math.floor(Math.random() * koment.length), keyLiveOrComment = koment[tte];
						if(final){
							sendExistDmLink(keyLiveOrComment, canonical_uri, id_user_link, titleBranch, deschBranch, img_custom, sended_dm, v, 1);
						}else {
							sendExistDmLink(keyLiveOrComment, canonical_uri, id_user_link, titleBranch, deschBranch, img_custom, sended_dm, v, 0);
						}
					}, (i + 1) * delay)
					if (last) {
						final = false;
						return false;
					}
					return final;
				});
			}

		}else {
			alert('Pilih Opsi Tools Dulu !');
			$('button.toolkit').text('tamper');
			return false;
		}
	});

	async function timeLine(){
		setTimeout(()=>{
			$.ajax({
				url: '/timeline',
				type: 'get',
				headers: {
					'content-type': 'application/x-www-form-urlencoded'
				}
			}).done(()=>{
				$('.consolelog').text('Wes Entek Dan Sukses Load Timeline IG');
			}).fail(()=>{
				$('.consolelog').text('Wes Entek Dan Gagal Load Timeline IG');
			});
		}, 2000)
	}

	async function sendExistDmText(uri, thread, textdm){
		$.ajax({
			url: uri,
			type: 'post',
			beforeSend: ()=>{
				$('.consolelog').text('Enteni ... Start DM Existing');
			},
			headers: {
				'content-type': 'application/x-www-form-urlencoded'
			},
			data: {
				'thread': thread,
				'text': textdm
			}
		}).done((its)=>{
			sukses++;
			$('span.sukses').text(sukses);
			$('.consolelog').text(its.sukses);
		}).fail((xhr)=>{
			let fail = JSON.parse(xhr.responseText);
			gagal++;
			$('span.gagal').text(gagal);
			if(fail.htc_x){
				$('.consolelog').text(fail.htc_x);
			}else {
				if(fail.error.challenge.url.indexOf('suspended') > - 1){
					$('.consolelog').text('Akun Captha');
				}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
					$('.consolelog').text('Ganti Sandi');
				}
			}
		})
	}

	function sendExistDmLink(key_live, web_url, ios, title, description, image, uri, thread){
		$.ajax({
			url: 'https://api2.branch.io/v1/url',
			type: 'post',
			headers: {
				'content-type': 'application/json; charset=utf-8'
			},
			beforeSend: function() {
				$('.consolelog').text('Build Branch');
			},
			data: JSON.stringify({
				branch_key: key_live,
				data: {
					$desktop_url: web_url,
					$ios_url: ios,
					$android_url: ios,
					$og_app_id: '87741124305',
					$og_title: title,
					$og_description: description,
					$og_image_url: image
				}
			})
		}).done((bnc) => {
			BranchUri = bnc.url;
			$.ajax({
				url: uri,
				type: 'post',
				beforeSend: ()=>{
					$('.consolelog').text('Enteni ... Start DM Existing');
				},
				headers: {
					'content-type': 'application/x-www-form-urlencoded'
				},
				data: {
					'thread': thread,
					'linked': BranchUri
				}
			}).done((its)=>{
				sukses++;
				$('span.sukses').text(sukses);
				$('.consolelog').text(its.sukses);
			}).fail((xhr)=>{
				let fail = JSON.parse(xhr.responseText);
				gagal++;
				$('span.gagal').text(gagal);
				if(fail.htc_x){
					$('.consolelog').text(fail.htc_x);
				}else {
					if(fail.error.challenge.url.indexOf('suspended') > - 1){
						$('.consolelog').text('Akun Captha');
					}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
						$('.consolelog').text('Ganti Sandi');
					}
				}
			})
		}).fail(()=>{
			$('.consolelog').text('Gagal Gawe Branch Url');
		});
	}

	async function branchBuildtext(customtext, baseUrl, uid){
		$.ajax({
			url: baseUrl,
			type: 'post',
			beforeSend: function() {
				$('.consolelog').text('Get Uid : ' + uid);
			},
			headers: {
				'content-type': 'application/x-www-form-urlencoded'
			},
			data: {
				'uid_dm': uid,
				'text': customtext
			}
		}).done(
			(ut) => {
				sukses++;
				$('span.sukses').text(sukses);
				$('.consolelog').text('sukses dm');
		}).fail(
			(xhr) => {
				let fail = JSON.parse(xhr.responseText);
				gagal++;
				$('span.gagal').text(gagal);
				if(fail.htc_x){
					$('.consolelog').text(fail.htc_x);
				}else {
					if(fail.error.challenge.url.indexOf('suspended') > - 1){
						$('.consolelog').text('Akun Captha');
					}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
						$('.consolelog').text('Ganti Sandi');
					}
				}
		});
	}

	async function branchBuildgrouptext(customtext, baseUrl, uid){
		$.ajax({
			url: baseUrl,
			type: 'post',
			beforeSend: function() {
				$('.consolelog').text('Get uid array group');
			},
			headers: {
				'content-type': 'application/x-www-form-urlencoded'
			},
			data: {
				'uid_dmgroup': JSON.stringify(uid),
				'text': customtext
			}
		}).done(
			(ut) => {
				sukses++;
				$('span.sukses').text(sukses);
				$('.consolelog').text('sukses dm');
		}).fail(
			(xhr) => {
				let fail = JSON.parse(xhr.responseText);
				gagal++;
				$('span.gagal').text(gagal);
				if(fail.htc_x){
					$('.consolelog').text(fail.htc_x);
				}else {
					if(fail.error.challenge.url.indexOf('suspended') > - 1){
						$('.consolelog').text('Akun Captha');
					}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
						$('.consolelog').text('Ganti Sandi');
					}
				}
		});
	}

	async function branchBuild(key_live, web_url, ios, title, description, image, baseUrl, uid){
		$.ajax({
			url: 'https://api2.branch.io/v1/url',
			type: 'post',
			headers: {
				'content-type': 'application/json; charset=utf-8'
			},
			beforeSend: function() {
				$('.consolelog').text('Build Branch');
			},
			data: JSON.stringify({
				branch_key: key_live,
				data: {
					$desktop_url: web_url,
					$ios_url: ios,
					$android_url: ios,
					$og_app_id: '87741124305',
					$og_title: title,
					$og_description: description,
					$og_image_url: image
				}
			})
		}).done((bnc) => {
			BranchUri = bnc.url;
			$.ajax({
				url: baseUrl,
				type: 'post',
				beforeSend: function() {
					$('.consolelog').text('Get Uid : ' + uid);
				},
				headers: {
					'content-type': 'application/x-www-form-urlencoded'
				},
				data: {
					'uid_dm': uid,
					'linked': BranchUri
				}
			}).done(
				(ut) => {
					sukses++;
					$('span.sukses').text(sukses);
					$('.consolelog').text('sukses dm');
			}).fail(
				(xhr) => {
					let fail = JSON.parse(xhr.responseText);
					gagal++;
					$('span.gagal').text(gagal);
					if(fail.htc_x){
						$('.consolelog').text(fail.htc_x);
					}else {
						if(fail.error.challenge.url.indexOf('suspended') > - 1){
							$('.consolelog').text('Akun Captha');
						}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
							$('.consolelog').text('Ganti Sandi');
						}
					}
			});
		}).fail(()=>{
			$('.consolelog').text('Gagal Gawe Branch Url');
		})
	}

	async function branchBuildGroup(key_live, web_url, ios, title, description, image, baseUrl, uid){
		$.ajax({
			url: 'https://api2.branch.io/v1/url',
			type: 'post',
			headers: {
				'content-type': 'application/json; charset=utf-8'
			},
			beforeSend: function() {
				$('.consolelog').text('Build Branch');
			},
			data: JSON.stringify({
				branch_key: key_live,
				data: {
					$desktop_url: web_url,
					$ios_url: ios,
					$android_url: ios,
					$og_app_id: '87741124305',
					$og_title: title,
					$og_description: description,
					$og_image_url: image
				}
			})
		}).done((bnc)=>{
			BranchUri = bnc.url;
			$.ajax({
				url: baseUrl,
				type: 'post',
				beforeSend: function() {
					$('.consolelog').text('Get uid array group');
				},
				headers: {
					'content-type': 'application/x-www-form-urlencoded'
				},
				data: {
					'uid_dmgroup': JSON.stringify(uid),
					'linked': BranchUri
				}
			}).done(
				(ut) => {
					sukses++;
					$('span.sukses').text(sukses);
					$('.consolelog').text('sukses dm');
			}).fail(
				(xhr) => {
					let fail = JSON.parse(xhr.responseText);
					gagal++;
					$('span.gagal').text(gagal);
					if(fail.htc_x){
						$('.consolelog').text(fail.htc_x);
					}else {
						if(fail.error.challenge.url.indexOf('suspended') > - 1){
							$('.consolelog').text('Akun Captha');
						}else if(fail.error.challenge.url.indexOf('challenge') > - 1){
							$('.consolelog').text('Ganti Sandi');
						}
					}
			});
		}).fail(()=>{
			$('.consolelog').text('Gagal Gawe Branch Url');
		})
	}

	function chunkify(array, chunkSize = 15) {
		const chunks = Array.from({
				length: Math.ceil(array.length / chunkSize)
			},
			(_, i) => {
				const start = chunkSize * i;
				return array.slice(start, start + chunkSize);
			}
		);
		return chunks;
	}
//});